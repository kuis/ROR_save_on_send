section.content-header
  .container
    .row
      .col-xs-12
        h2= t('.title')
        .align-center.text-left
          ul
            - t('.benefits').each do |line, text|
              li 
                i.fa.fa-check 
                | #{text}

section.content.recent-tr-page
  .container
    .row
      .col-xs-12.intro.text-center
        h3= t('.see_how_much')
        p.align-center= t('.enter_info')
    
    // errors
    - if @user_recent_transaction.errors.full_messages.count > 0
      .row
        .col-xs-12.align-center.alert.alert-danger data-error='1'
          ul
            - @user_recent_transaction.errors.each do |attribute, err_msg|
              - if attribute == :'feedback.service_quality_and_comments'
                li= err_msg
              - else
                li= @user_recent_transaction.errors.full_message(attribute, err_msg)
    
    .row
      .col-xs-12
        = form_for(@user_recent_transaction, url: user_recent_transaction_path, html: {class: 'form-horizontal user_recent_transaction', role: 'form'}) do |f|

          // select country
          = render partial: 'shared/select_country_ctrl', locals: {f: f, resource: @user_recent_transaction, label_class: 'col-sm-5', control_class: 'col-sm-7'}
          
          // date
          .form-group
            = f.label :date, class: 'col-sm-5 control-label'
            .col-sm-3
              .input-group.input-group-fix.date
                = f.text_field :date, value: @user_recent_transaction.date.present? ? @user_recent_transaction.date.strftime('%m/%d/%Y'): '', class: 'form-control mask-date'
                span.input-group-addon
                  i.fa.fa-calendar

          // amount sent
          .form-group
            = f.label :amount_sent, class: 'col-sm-5 control-label'
            .col-sm-3
              .input-group.input-group-fix
                .input-group-addon
                  i.fa.fa-usd.fa-fw
                = money_field f, @user_recent_transaction, :amount_sent, 'form-control mask-money-sent'
          
          // currency
          - if @prefered_currency
            - if @prefered_currency.size > 1
              .form-group
                = f.label :currency, class: 'col-sm-5 control-label'
                .col-sm-3
                  - checked_currency = @user_recent_transaction.currency || (current_user.present? ? current_user.prefered_currency.collect.first : nil)
                  = f.collection_radio_buttons(:currency, @prefered_currency.collect {|currency| [ currency, currency ] }, :first, :last, {prompt: true, checked: checked_currency}) do |b|
                    = b.label( class: "radio-inline", title: b.text )
                      = b.radio_button
                      i *{:class => ['fa fa-fw fa-lg', 'fa-'+b.text.parameterize.downcase]}

            - else
              = f.hidden_field :currency, value: @prefered_currency.first

          - else
            - Country.all.each do |country|
              - if country.receive_currency.size > 1
                .form-group.hidden.receive_currency *{id: "receive_currency_#{country.id}"}
                  = f.label :currency, class: 'col-sm-5 control-label'
                  .col-sm-3
                    = f.collection_radio_buttons(:currency, country.receive_currency.collect {|currency| [ currency, currency ] }, :first, :last, {prompt: true}) do |b|
                      = b.label( class: "radio-inline", title: b.text )
                        = b.radio_button
                        i *{:class => ['fa fa-fw fa-lg', 'fa-'+b.text.parameterize.downcase]}
          
          // amount received
          .form-group
            = f.label :amount_received, class: 'col-sm-5 control-label'
            .col-sm-3
              .input-group.input-group-fix
                .input-group-addon#amount_receive_currency
                  - if @prefered_currency && @prefered_currency.size == 1
                    i.fa.fa-fw *{:class => ["fa-"+(@user_recent_transaction.currency || @prefered_currency.first).downcase]}
                  - elsif @user_recent_transaction.currency
                    i.fa.fa-fw *{:class => ["fa-"+(@user_recent_transaction.currency).downcase]}
                = money_field f, @user_recent_transaction, :amount_received, 'form-control mask-money-received'

          // originating source of funds
          .form-group
            = f.label :originating_source_of_funds_id, class: 'col-sm-5 control-label'
            .col-sm-7
              = f.collection_radio_buttons(:originating_source_of_funds_id, PaymentMethod.all, :id, :name, {prompt: true, checked: PaymentMethod.first.id}) do |b|
                = b.label( class: "radio-inline", title: b.text )
                  = b.radio_button
                  i *{:class => ['fa fa-fw fa-lg', 'fa-'+b.text.parameterize.downcase]}
          
          // name of service provider
          .form-group
            = f.label :service_provider_id, class: 'col-sm-5 control-label valabel'
            .col-sm-5
              .providers
                = f.collection_radio_buttons(:service_provider_id, @service_providers, :id, :name, {prompt: true, checked: @user_recent_transaction.service_provider.try(:id) || ServiceProvider.first.id}) do |b|
                    = b.label( class: "radio-inline", title: b.text )
                      = b.radio_button
                      =image_tag('provider-icons/'+ b.text.parameterize.downcase + '.png')

                // other provider
                .radio
                  label.radio-inline
                    = radio_button_tag 'user_recent_transaction[service_provider_id]', '', false, "data-toggle" => "modal", "data-target" => "#other_provider_modal"
                    | #{t('.other_provider')}

              .modal.fade#other_provider_modal tabindex="-1" role="dialog" aria-labelledby="other_provider_modal_label" aria-hidden="true"
                .modal-dialog
                  .modal-content
                    .modal-header
                      button.close type="button" data-dismiss="modal"
                        span aria-hidden="true"
                          | &times;
                        span.sr-only
                          | #{t('.close')}
                      h4.modal-title#other_provider_modal_label
                        | #{t('.other_provider_modal_label')}
                    .modal-body
                      = f.fields_for :service_provider_attributes, ServiceProvider.new do |sp|
                        .form-group
                          = sp.label :name, class: 'col-sm-4 control-label'
                          .col-sm-8
                            = sp.text_field :name, class: 'form-control'
                        .form-group
                          = sp.label :landing_page, class: 'col-sm-4 control-label'
                          .col-sm-8
                            = sp.text_field :landing_page, class: 'form-control'
                    .modal-footer
                      button.btn.btn-default type="button" data-dismiss= "modal"
                        | #{t('.close')}
                      a.btn.btn-primary href="javascript:$('#other_provider_modal').modal('hide')"
                        | #{t('.ok')}

          // destination preference for funds
          .form-group
            = f.label :destination_preference_for_funds_id, class: 'col-sm-5 control-label'
            .col-sm-7
              = f.collection_radio_buttons(:destination_preference_for_funds_id, PaymentMethod.for_receiving.all, :id, :name, {prompt: true, checked: PaymentMethod.for_receiving.first.id}) do |b|
                = b.label( class: "radio-inline", title: b.text )
                  = b.radio_button
                  i *{:class => ['fa fa-fw fa-lg', 'fa-'+b.text.parameterize.downcase]}

          // fees for sending
          .form-group
            = f.label :fees_for_sending, class: 'col-sm-5 control-label'
            .col-sm-3
              .input-group.input-group-fix
                .input-group-addon
                  i.fa.fa-usd.fa-fw
                = money_field f, @user_recent_transaction, :fees_for_sending, 'form-control mask-money-fees'

          // send to receive duration
          .form-group
            = f.label :send_to_receive_duration, class: 'col-sm-5 control-label'
            .col-sm-5
              .row
                .col-sm-3
                  = f.text_field :send_to_receive_duration, class: 'form-control mask-minutes input-group-fix', placeholder: '0'
                .col-sm-12
                  = f.collection_radio_buttons(:send_to_receive_duration_interval, User::RecentTransaction.duration_intervals_for_select, :first, :last, {}, {class: ''}) do |b|
                    = b.label( class: "radio-inline", title: b.text )
                      = b.radio_button
                      = b.text
          
          // documentation requirements
            .form-group
              = f.label :documentation_requirements, class: 'col-sm-5 control-label'
              .col-sm-7
                label.checkbox-inline
                  = f.check_box :documentation_requirements, {multiple: true}, 'Photo ID', ''
                  = t('.photo_id')
                label.checkbox-inline
                  = f.check_box :documentation_requirements, {multiple: true}, 'Tax returns', ''
                  = t('.tax_returns')
                label.checkbox-inline
                  = f.check_box :documentation_requirements, {multiple: true}, 'Job verification', ''
                  = t('.job_verification')
          
          // promotion
            .form-group
              = f.label :promotion, class: 'col-sm-5 control-label'
              .col-sm-5
                = f.text_field :promotion, class: 'form-control', placeholder: t('.placeholder_promotion')

          // provider quality
          = f.fields_for :feedback, @user_recent_transaction.feedback || Feedback.new do |feedback|
            .form-group
              = feedback.label :service_quality, class: 'col-sm-5 control-label'
              .col-sm-7
                .user-rating
                  = feedback.collection_radio_buttons(:service_quality, (1..5).collect{|rate| [rate, rate]}, :first, :last, {prompt: true}) do |b|
                    = b.radio_button( class: "star "+( b.value == 1 ? "required" : ""))

            // comments
            .form-group
              = feedback.label :comments, class: 'col-sm-5 control-label'
              .col-sm-5
                = feedback.text_area :comments, class: 'form-control', cols: '1', rows: '4'

          // actions
          .form-group
            .col-sm-5.control-label.f-normal.valabel
              =link_to t('.clear_form'), new_user_recent_transaction_path

            .col-sm-7
              = button_tag type:"submit", class: "btn btn-primary btn-lg" do
                i.fa.fa-fw.fa-check-circle-o
                = t('.submit')

= render partial: 'shared/feedback'
