h2= t('.title')
= form_for(@user_recent_transaction, url: user_recent_transaction_path, html: {class: 'form-horizontal', role: 'form'}) do |f|
  // errors
  - @user_recent_transaction.errors.full_messages.each do |err_msg|
    .bg-warning= err_msg

  // date
  .form-group
    = f.label :date, class: 'col-xs-12 col-sm-4 control-label'
    .col-xs-6.col-sm-5.col-md-4.col-lg-3
      .input-group.date
        = f.text_field :date, class: 'form-control', placeholder: 'mm/dd/yyyy'
        .input-group-addon
          i.fa.fa-calendar
  // currency
  - prefered_currency = current_user.prefered_currency
  - if prefered_currency.size > 1
    .form-group
      = f.label :currency, class: 'col-xs-12 col-sm-4 control-label'
      .col-xs-6.col-sm-5.col-md-4.col-lg-3
        = f.collection_radio_buttons(:currency, current_user.prefered_currency.collect {|currency| [ currency, currency ] }, :first, :last, {prompt: true, checked: current_user.prefered_currency.collect.first}) do |b|
          = b.label( for: 'user_recent_transaction_currency_'+b.text.parameterize.downcase, class: "radio-inline", title: b.text )
            = b.radio_button( id: 'user_recent_transaction_currency_'+b.text.parameterize.downcase )
            i *{:class => ['fa', 'fa-fw', 'fa-'+b.text.parameterize.downcase]}
  - else
    = f.hidden_field :currency, value: prefered_currency.first
  // amount sent
  .form-group
    = f.label :amount_sent, class: 'col-xs-12 col-sm-4 control-label'
    .col-xs-6.col-sm-5.col-md-4.col-lg-3
      .input-group
        .input-group-addon
          i.fa.fa-usd.fa-fw
        = money_field f, @user_recent_transaction, :amount_sent
  // amount received
  .form-group
    = f.label :amount_received, class: 'col-xs-12 col-sm-4 control-label'
    .col-xs-6.col-sm-5.col-md-4.col-lg-3
      .input-group
        .input-group-addon#amount_received_currency
          i.fa.fa-fw *{:class => ["fa-"+(@user_recent_transaction.currency || current_user.prefered_currency.first).downcase]}
        = money_field f, @user_recent_transaction, :amount_received
  // originating source of funds
  .form-group
    = f.label :originating_source_of_funds_id, class: 'col-sm-4 control-label'
    .col-sm-8
      = f.collection_radio_buttons(:originating_source_of_funds_id, PaymentMethod.all, :id, :name, {prompt: true, checked: PaymentMethod.first.id}) do |b|
        = b.label( class: "radio-inline", title: b.text )
          = b.radio_button
          i *{:class => ['fa', 'fa-fw', 'fa-'+b.text.parameterize.downcase]}
  // name of service provider
  .form-group
    = f.label :service_provider_id, class: 'col-sm-4 control-label'
    .col-sm-8
      .row
        = f.collection_radio_buttons(:service_provider_id, ServiceProvider.all, :id, :name, {prompt: true, checked: ServiceProvider.first.id}) do |b|
          .col-xs-6.col-md-4
            = b.label( class: "radio-inline", title: b.text )
              = b.radio_button
              i *{:class => ['icon-'+b.text.parameterize.downcase]}
  // destination preference for funds
  .form-group
    = f.label :destination_preference_for_funds_id, class: 'col-sm-4 control-label'
    .col-sm-8
      = f.collection_radio_buttons(:destination_preference_for_funds_id, PaymentMethod.for_receiving.all, :id, :name, {prompt: true, checked: PaymentMethod.for_receiving.first.id}) do |b|
        = b.label( class: "radio-inline", title: b.text )
          = b.radio_button
          i *{:class => ['fa', 'fa-fw', 'fa-'+b.text.parameterize.downcase]}
  // fees for sending
  .form-group
    = f.label :fees_for_sending, class: 'col-xs-12 col-sm-4 control-label'
    .col-xs-6.col-sm-5.col-md-4.col-lg-3
      .input-group
        .input-group-addon
          i.fa.fa-usd.fa-fw
        = money_field f, @user_recent_transaction, :fees_for_sending
  // fees for receiving
     .form-group
      = f.label :fees_for_receiving, class: 'col-sm-4 control-label'
      .col-sm-8
        = f.text_field :fees_for_receiving, class: 'form-control'
  // send to receive duration
  .form-group
    = f.label :send_to_receive_duration, class: 'col-xs-12 col-sm-4 control-label'
    .col-xs-6.col-sm-4.col-lg-3
      = f.text_field :send_to_receive_duration, class: 'form-control', placeholder: '0'
    .col-xs-6.col-sm-4.col-lg-3
      = f.select :send_to_receive_duration_interval, User::RecentTransaction.duration_intervals_for_select, {}, {class: 'form-control'}
  // documentation requirements
    .form-group
      = f.label :documentation_requirements, class: 'col-sm-4 control-label'
      .col-sm-4
        .checkbox
          label
            = f.check_box :documentation_requirements, {multiple: true}, 'Photo ID', ''
            = t('.photo_id')
        .checkbox
          label.checkbox-inline
            = f.check_box :documentation_requirements, {multiple: true}, 'Tax returns', ''
            = t('.tax_returns')
        .checkbox
          label.checkbox-inline
            = f.check_box :documentation_requirements, {multiple: true}, 'Job verification', ''
            = t('.job_verification')
  // promotion
    .form-group
      = f.label :promotion, class: 'col-sm-4 control-label'
      .col-sm-8
        = f.text_field :promotion, class: 'form-control'
  // service quality
  .form-group
    = f.label :service_quality, class: 'col-sm-4 control-label'
    .col-sm-8
      = f.collection_radio_buttons(:service_quality, (1..5).collect{|rate| [rate, rate]}, :first, :last, {prompt: true}) do |b|
        = b.label( class: "radio-inline", title: b.text )
          = b.radio_button
          = b.text
  // comments
  .form-group
    = f.label :comments, class: 'col-sm-4 control-label'
    .col-sm-8
      = f.text_area :comments, class: 'form-control'
  // actions
  .form-group
    .col-sm-offset-4.col-sm-8
      = f.submit t('.submit'), class: 'btn btn-primary btn-lg'





